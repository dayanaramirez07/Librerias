import { CommonModule } from '@angular/common';
import { Component, Input } from '@angular/core';
import { RouterModule } from '@angular/router';
import { NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';
import { CapitalizarPipe } from '../../pipes/capitalizar.pipe';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@ng-bootstrap/ng-bootstrap";
export class AccionesComponent {
    constructor() {
        /**
         * Listado de accciones con la estructura: { nombre: valor, icono: valor, metodo: valor, color: valor }
         */
        this.dato = {};
        this.acciones = [];
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: AccionesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.12", type: AccionesComponent, isStandalone: true, selector: "app-acciones", inputs: { dato: "dato", acciones: "acciones" }, ngImport: i0, template: "<div class=\"gap-2 d-md-flex justify-content-md-center\">\r\n\r\n    <ng-container *ngFor=\"let accion of acciones\">\r\n        <button \r\n            *ngIf=\"!accion.habilitada || accion.habilitada(dato)\"\r\n            type=\"button\"\r\n            class=\"btn btn-sm\"\r\n            [ngClass]=\"accion.color\"\r\n            (click)=\"accion.metodo(dato)\"\r\n            (mouseenter)=\"tooltip.open()\"\r\n            (mouseleave)=\"tooltip.close()\"\r\n            [ngbTooltip]=\"accion.nombre | capitalizar\"\r\n            #tooltip=\"ngbTooltip\"\r\n            triggers=\"manual\"\r\n            placement=\"bottom\">\r\n            <i class=\"fas\" [ngClass]=\"accion.icono\"></i>\r\n        </button>\r\n    </ng-container>\r\n\r\n</div>", styles: [""], dependencies: [{ kind: "ngmodule", type: RouterModule }, { kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "pipe", type: CapitalizarPipe, name: "capitalizar" }, { kind: "ngmodule", type: NgbTooltipModule }, { kind: "directive", type: i2.NgbTooltip, selector: "[ngbTooltip]", inputs: ["animation", "autoClose", "placement", "popperOptions", "triggers", "positionTarget", "container", "disableTooltip", "tooltipClass", "tooltipContext", "openDelay", "closeDelay", "ngbTooltip"], outputs: ["shown", "hidden"], exportAs: ["ngbTooltip"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: AccionesComponent, decorators: [{
            type: Component,
            args: [{ selector: 'app-acciones', standalone: true, imports: [
                        RouterModule,
                        CommonModule,
                        CapitalizarPipe,
                        NgbTooltipModule
                    ], template: "<div class=\"gap-2 d-md-flex justify-content-md-center\">\r\n\r\n    <ng-container *ngFor=\"let accion of acciones\">\r\n        <button \r\n            *ngIf=\"!accion.habilitada || accion.habilitada(dato)\"\r\n            type=\"button\"\r\n            class=\"btn btn-sm\"\r\n            [ngClass]=\"accion.color\"\r\n            (click)=\"accion.metodo(dato)\"\r\n            (mouseenter)=\"tooltip.open()\"\r\n            (mouseleave)=\"tooltip.close()\"\r\n            [ngbTooltip]=\"accion.nombre | capitalizar\"\r\n            #tooltip=\"ngbTooltip\"\r\n            triggers=\"manual\"\r\n            placement=\"bottom\">\r\n            <i class=\"fas\" [ngClass]=\"accion.icono\"></i>\r\n        </button>\r\n    </ng-container>\r\n\r\n</div>" }]
        }], propDecorators: { dato: [{
                type: Input
            }], acciones: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjaW9uZXMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdGFibGEvc3JjL2xpYi9jb21wb25lbnRzL2FjY2lvbmVzL2FjY2lvbmVzLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3RhYmxhL3NyYy9saWIvY29tcG9uZW50cy9hY2Npb25lcy9hY2Npb25lcy5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQzlELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQzs7OztBQWMvRCxNQUFNLE9BQU8saUJBQWlCO0lBWjlCO1FBY0U7O1dBRUc7UUFDYSxTQUFJLEdBQVEsRUFBRSxDQUFDO1FBQ2YsYUFBUSxHQUFVLEVBQUUsQ0FBQztLQUV0QzsrR0FSWSxpQkFBaUI7bUdBQWpCLGlCQUFpQix3SENsQjlCLGt2QkFtQk0seUREVEYsWUFBWSw4QkFDWixZQUFZLHlWQUNaLGVBQWUsbURBQ2YsZ0JBQWdCOzs0RkFLUCxpQkFBaUI7a0JBWjdCLFNBQVM7K0JBQ0UsY0FBYyxjQUNaLElBQUksV0FDUDt3QkFDUCxZQUFZO3dCQUNaLFlBQVk7d0JBQ1osZUFBZTt3QkFDZixnQkFBZ0I7cUJBQ2pCOzhCQVNlLElBQUk7c0JBQW5CLEtBQUs7Z0JBQ1UsUUFBUTtzQkFBdkIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUm91dGVyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcclxuaW1wb3J0IHsgTmdiVG9vbHRpcE1vZHVsZSB9IGZyb20gJ0BuZy1ib290c3RyYXAvbmctYm9vdHN0cmFwJztcclxuaW1wb3J0IHsgQ2FwaXRhbGl6YXJQaXBlIH0gZnJvbSAnLi4vLi4vcGlwZXMvY2FwaXRhbGl6YXIucGlwZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FwcC1hY2Npb25lcycsXHJcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcclxuICBpbXBvcnRzOiBbXHJcbiAgICBSb3V0ZXJNb2R1bGUsXHJcbiAgICBDb21tb25Nb2R1bGUsXHJcbiAgICBDYXBpdGFsaXphclBpcGUsXHJcbiAgICBOZ2JUb29sdGlwTW9kdWxlXHJcbiAgXSxcclxuICB0ZW1wbGF0ZVVybDogJy4vYWNjaW9uZXMuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsOiAnLi9hY2Npb25lcy5jb21wb25lbnQuY3NzJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgQWNjaW9uZXNDb21wb25lbnQge1xyXG5cclxuICAvKipcclxuICAgKiBMaXN0YWRvIGRlIGFjY2Npb25lcyBjb24gbGEgZXN0cnVjdHVyYTogeyBub21icmU6IHZhbG9yLCBpY29ubzogdmFsb3IsIG1ldG9kbzogdmFsb3IsIGNvbG9yOiB2YWxvciB9XHJcbiAgICovXHJcbiAgQElucHV0KCkgcHVibGljIGRhdG86IGFueSA9IHt9O1xyXG4gIEBJbnB1dCgpIHB1YmxpYyBhY2Npb25lczogYW55W10gPSBbXTtcclxuXHJcbn0iLCI8ZGl2IGNsYXNzPVwiZ2FwLTIgZC1tZC1mbGV4IGp1c3RpZnktY29udGVudC1tZC1jZW50ZXJcIj5cclxuXHJcbiAgICA8bmctY29udGFpbmVyICpuZ0Zvcj1cImxldCBhY2Npb24gb2YgYWNjaW9uZXNcIj5cclxuICAgICAgICA8YnV0dG9uIFxyXG4gICAgICAgICAgICAqbmdJZj1cIiFhY2Npb24uaGFiaWxpdGFkYSB8fCBhY2Npb24uaGFiaWxpdGFkYShkYXRvKVwiXHJcbiAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxyXG4gICAgICAgICAgICBjbGFzcz1cImJ0biBidG4tc21cIlxyXG4gICAgICAgICAgICBbbmdDbGFzc109XCJhY2Npb24uY29sb3JcIlxyXG4gICAgICAgICAgICAoY2xpY2spPVwiYWNjaW9uLm1ldG9kbyhkYXRvKVwiXHJcbiAgICAgICAgICAgIChtb3VzZWVudGVyKT1cInRvb2x0aXAub3BlbigpXCJcclxuICAgICAgICAgICAgKG1vdXNlbGVhdmUpPVwidG9vbHRpcC5jbG9zZSgpXCJcclxuICAgICAgICAgICAgW25nYlRvb2x0aXBdPVwiYWNjaW9uLm5vbWJyZSB8IGNhcGl0YWxpemFyXCJcclxuICAgICAgICAgICAgI3Rvb2x0aXA9XCJuZ2JUb29sdGlwXCJcclxuICAgICAgICAgICAgdHJpZ2dlcnM9XCJtYW51YWxcIlxyXG4gICAgICAgICAgICBwbGFjZW1lbnQ9XCJib3R0b21cIj5cclxuICAgICAgICAgICAgPGkgY2xhc3M9XCJmYXNcIiBbbmdDbGFzc109XCJhY2Npb24uaWNvbm9cIj48L2k+XHJcbiAgICAgICAgPC9idXR0b24+XHJcbiAgICA8L25nLWNvbnRhaW5lcj5cclxuXHJcbjwvZGl2PiJdfQ==