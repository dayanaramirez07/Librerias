{"version":3,"file":"spinner.mjs","sources":["../../../projects/spinner/src/lib/spinner.service.ts","../../../projects/spinner/src/lib/spinner.component.ts","../../../projects/spinner/src/public-api.ts","../../../projects/spinner/src/spinner.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SpinnerService {\r\n\r\n  public isLoading$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n  private temporizador: any;\r\n\r\n  public get isLoading(): Observable<boolean> {\r\n    return this.isLoading$.asObservable();\r\n  }\r\n\r\n  public mostrar(): void {\r\n    this.isLoading$.next(true);\r\n\r\n    if (this.temporizador) {\r\n      clearTimeout(this.temporizador);\r\n    }\r\n\r\n    this.temporizador = setTimeout(() => {\r\n      this.ocultar();\r\n    }, 60000);\r\n  }\r\n\r\n  public ocultar(): void {\r\n    this.isLoading$.next(false);\r\n\r\n    if (this.temporizador) {\r\n      clearTimeout(this.temporizador);\r\n      this.temporizador = null;\r\n    }\r\n  }\r\n\r\n}","import { Component } from '@angular/core';\r\nimport { SpinnerService } from './spinner.service';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'lib-spinner',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  template: `\r\n    <div\r\n      *ngIf=\"isLoading\"\r\n      class=\"d-flex justify-content-center align-items-center vh-100 position-fixed top-0 start-0 w-100 z-3 bg-white\">\r\n      <div \r\n        class=\"position-fixed top-50 spinner-border text-primary\"\r\n        role=\"status\">\r\n      </div>\r\n      <p class=\"position-fixed mt-5 top-50\">Cargando...</p>\r\n    </div>\r\n  `,\r\n  styles: `\r\n    .spinner-border {\r\n      height: 40px;\r\n      width: 40px;\r\n      border-width: 5px;\r\n    }\r\n  `\r\n})\r\nexport class SpinnerComponent {\r\n\r\n  public isLoading: boolean = true;\r\n\r\n  constructor(\r\n    private _spinnerService: SpinnerService\r\n  ) {\r\n    this._spinnerService.isLoading$.subscribe(\r\n      spinner => {\r\n        this.isLoading = spinner;\r\n      }\r\n    );\r\n  }\r\n\r\n}","/*\r\n * Public API Surface of spinner\r\n */\r\n\r\nexport * from './lib/spinner.service';\r\nexport * from './lib/spinner.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.SpinnerService"],"mappings":";;;;;;MAMa,cAAc,CAAA;AAH3B,IAAA,WAAA,GAAA;AAKS,QAAA,IAAA,CAAA,UAAU,GAA6B,IAAI,eAAe,CAAC,KAAK,CAAC;AA6BzE;AAzBC,IAAA,IAAW,SAAS,GAAA;AAClB,QAAA,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE;;IAGhC,OAAO,GAAA;AACZ,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;AAE1B,QAAA,IAAI,IAAI,CAAC,YAAY,EAAE;AACrB,YAAA,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC;;AAGjC,QAAA,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC,MAAK;YAClC,IAAI,CAAC,OAAO,EAAE;SACf,EAAE,KAAK,CAAC;;IAGJ,OAAO,GAAA;AACZ,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;AAE3B,QAAA,IAAI,IAAI,CAAC,YAAY,EAAE;AACrB,YAAA,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC;AAC/B,YAAA,IAAI,CAAC,YAAY,GAAG,IAAI;;;+GA3BjB,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAd,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,cAFb,MAAM,EAAA,CAAA,CAAA;;4FAEP,cAAc,EAAA,UAAA,EAAA,CAAA;kBAH1B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE;AACb,iBAAA;;;MCwBY,gBAAgB,CAAA;AAI3B,IAAA,WAAA,CACU,eAA+B,EAAA;QAA/B,IAAe,CAAA,eAAA,GAAf,eAAe;QAHlB,IAAS,CAAA,SAAA,GAAY,IAAI;QAK9B,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,SAAS,CACvC,OAAO,IAAG;AACR,YAAA,IAAI,CAAC,SAAS,GAAG,OAAO;AAC1B,SAAC,CACF;;+GAXQ,gBAAgB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAA,cAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAhB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,gBAAgB,EAnBjB,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,aAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA,CAAA;;;;;;;;;;AAUT,EAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,4DAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAZC,YAAY,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;;4FAqBH,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAzB5B,SAAS;+BACE,aAAa,EAAA,UAAA,EACX,IAAI,EACP,OAAA,EAAA;wBACP;qBACD,EACS,QAAA,EAAA,CAAA;;;;;;;;;;AAUT,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,4DAAA,CAAA,EAAA;;;ACpBH;;AAEG;;ACFH;;AAEG;;;;"}